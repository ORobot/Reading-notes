* 忠告
** 在编程序时, 你是在为你针对某个问题的解决方案中的思想建立其一种具体表示. 让程序的结构能直接
   反映这些思想
   1. 如果你能把'它'看成一个独立的概念, 就把它做成一个类
   2. 如果你能把'它'看成一个独立的实体, 就把它做成某个类的对象
   3. 如果两个类有共同的界面, 将此界面做成一个基类
   4. 如果两个类的实现有某些显著的共同东西, 将这些共性做成一个基类
   5. 如果一个类是一种对象的容器, 将它做成一个模板
   6. 如果一个函数实现对某容器的一个算法, 将它实现为对一族容器可用的模板函数
   7. 如果一组类, 模板等互相之间有逻辑关系, 将它们放进一个名字空间中
** 在你定义一个并不是实现某个像矩阵或复数这样的数学对象的类时, 或者定义一个底层的类型如链表的
   时候
   1. 不要使用全局数据(使用成员)
   2. 不要使用全局函数
   3. 不要使用公用数据成员
   4. 不要使用友元, 除非为了避免1, 3.
   5. 不要在一个类里面放"类型域" -> 指那种为了说明一个类所存储数据的情况而放置的标志域, 采用
      虚函数
   6. 不要使用inline函数, 除非作为效果显著的优化
